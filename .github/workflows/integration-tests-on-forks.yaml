name: Integration Tests on Forked PRs

on:
  workflow_dispatch:
    inputs:
      forked-pr-number:
        description: "The number of the forked pull request you'd like to test"
        required: true

jobs:
  # Repo owner has commented /ok-to-test on a (fork-based) pull request
  integration-fork:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.21'

      # Check out PR from input
      - name: Checkout specified forked PR
        uses: actions/checkout@v4
        with:
          ref: 'refs/pull/${{ github.event.inputs.forked-pr-number }}/merge'

      - run: go test src/variable_test.go

      # Update check run called "integration-fork"
      - uses: actions/github-script@v6
        id: update-check-run
        if: ${{ always() }}
        env:
          number: ${{ github.event.inputs.forked-pr-number }}
          job: ${{ github.job }}
          # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
          conclusion: ${{ job.status }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pull } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });
            const ref = pull.head.sha;
            
            const { data: checks } = await github.rest.checks.listForRef({
              ...context.repo,
              ref
            });
            
            const check = checks.check_runs.filter(c => c.name === process.env.job);
            
            const { data: result } = await github.rest.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion
            });
            
            return result;
